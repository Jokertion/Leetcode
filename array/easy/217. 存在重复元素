_doc2 = """
给定一个整数数组，判断是否存在重复元素。
如果任何值在数组中出现至少两次，函数返回 true。如果数组中每个元素都不相同，则返回 false。

示例 1:
输入: [1,2,3,1]
输出: true

示例 2:
输入: [1,2,3,4]
输出: false

示例 3:
输入: [1,1,1,3,3,4,3,2,4,2]
输出: true
"""


class Solution(object):
    def containsDuplicate(self, nums):
        """
        :type nums: List[int]
        :rtype: bool
        """

        # 方法1：set判断长度
        """
        执行用时: 136ms, 在所有Python提交中击败了94.11 % 的用户
        内存消耗: 17.2MB, 在所有Python提交中击败了20.16 % 的用户
        """
        s = set(nums)
        if len(s) != len(nums):
            return True
        return False


class Solution2(object):
    def containsDuplicate(self, nums):
        """
        :type nums: List[int]
        :rtype: bool
        """
        # 方法2：排序判断前后两个值是否相同

        """
        执行用时: 248ms, 在所有Python提交中击败了7.74 % 的用户
        内存消耗: 15.7MB, 在所有Python提交中击败了40.33 % 的用户
        """
        if len(nums) <= 1:
            return False
        nums.sort()
        for i in range(len(nums) - 1):
            if nums[i] == nums[i + 1]:
                return True
        return False


class Solution3(object):
    def containsDuplicate(self, nums):
        """
        :type nums: List[int]
        :rtype: bool
        """
        # 方法3：数字存字典
        """
        执行用时 :140 ms, 在所有 Python 提交中击败了88.23%的用户
        内存消耗 :17.7 MB, 在所有 Python 提交中击败了8.00%的用户
        """
        dic = {}
        for i in nums:
            dic[i] = dic.get(i, 0) + 1
            if dic[i] > 1:
                return True
        return False
