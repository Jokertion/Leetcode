_doc = """
给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。

示例:
输入: [0,1,0,3,12]
输出: [1,3,12,0,0]

说明:
必须在原数组上操作，不能拷贝额外的数组。
尽量减少操作次数。

"""


class Solution(object):

    def moveZeroes(self, nums):
        """
        执行用时 : 36 ms, 在Move Zeroes的Python提交中击败了98.89% 的用户
        内存消耗 : 12.7 MB, 在Move Zeroes的Python提交中击败了31.86% 的用户
        """
        # 思路：将最前面的0，交换到当前非0元素处
        # index: 最前面的0的下标
        index = 0
        for i in range(len(nums)):
            if nums[i] != 0:
                if index < i:
                    nums[index] = nums[i]
                    nums[i] = 0
                index += 1
        return nums
    
    def moveZeroes2(self, nums):
            """
            执行用时 : 92 ms, 在Move Zeroes的Python提交中击败了33.46% 的用户
            内存消耗 : 12.7 MB, 在Move Zeroes的Python提交中击败了35.10% 的用户
            """
            # 思路：统计0的个数，删除0后，再扩展列表相同个0
            n = nums.count(0)
            for i in range(n):
                nums.remove(0)
            add_zero = [0] * n
            nums.extend(add_zero)
            return nums
