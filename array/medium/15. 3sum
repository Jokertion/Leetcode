# 给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有满足条件且不重复
# 的三元组。
#
#  注意：答案中不可以包含重复的三元组。
#
#
#
#  示例：
#
#  给定数组 nums = [-1, 0, 1, 2, -1, -4]，
#
# 满足要求的三元组集合为：
# [
#   [-1, 0, 1],
#   [-1, -1, 2]
# ]
#
#  Related Topics 数组 双指针


class Solution(object):
    def threeSum(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        # 双指针+排序
        # 排序O(NlogN) + 数组遍历O(n)*双指针遍历O(n)
        # 解答成功: 执行耗时:420 ms,击败了90.78% 的Python用户 内存消耗:20.2 MB,击败了5.04% 的Python用户
        nums.sort()
        res = set()
        for n, v in enumerate(nums[:-2]):
            i, j = n + 1, len(nums) - 1
            if n > 1 and nums[n - 1] == v:
                continue
            while i < j:
                plus = v + nums[i] + nums[j]
                if plus < 0:
                    i += 1
                elif plus > 0:
                    j -= 1
                else:
                    res.add((v, nums[i], nums[j]))
                    i += 1
                    j -= 1
        return list(map(list, res))


result = Solution().threeSum([-1, 0, 1, 2, -1, -4])
print(result)
